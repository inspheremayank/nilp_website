.form_grider {
  $self: &;
  &.d1 {
    #{$self} {
      &_container {
        &--inline {
          .form_grider_wrap_helper {
            text-align: left;
          }
          @include mq(tablet) {
            @include inline-flex;
            @include flex-direction(row, horizontal);
            @include align-items(flex-start);

            .form_grider_wrap_field {
              min-width: 300px;
            }
          }

          .u-button {
            @include mq(tablet) {
              height: 50px;
              margin-left: 20px;
              @include align-items(center);
            }
          }
        }
      }
      &_wrap {
        @include flexbox;
        @include flex-direction(column, vertical);
        margin-bottom: 25px;

        &_label {
          color: var(--themeTextTertiary);
          line-height: 1.6;
          @include fontBase(var(--fontMedium));
          margin-bottom: 3px;
          font-size: $font14;

          @include mq(tablet) {
            font-size: $font16;
          }

          @include mq(desktop-min) {
            font-size: $font16;
          }
        }

        &_field {
          border: 1px solid var(--grey8);
          @include border-radius(5px);
          height: 50px;
          outline: none;
          padding: 15px;

          &::placeholder {
            color: #d6d6d6;
            font-size: $font16;
          }

          &.select_field {
            border: none;
            @include border-radius(0px);
            height: auto;
            outline: none;
            padding: 0px;

            .react-select {
              &__control {
                height: 50px;
                border-color: var(--grey8);
                background: var(--whiteBlack);
              }
              &__placeholder {
                color: #d6d6d6;
                @include fontBase(var(--fontRegular));
                font-size: $font16;
              }
              &__single-value{
                color: var(--blackWhite) !important;
                @include fontBase(var(--fontRegular));
              }
            }
          }
        }
        &_helper {
          font-size: $font12;
          margin-top: 4px;
          text-align: start;
        }
        &.hasError {
          #{$self} {
            &_wrap {
              &_label,
              &_helper {
                color: var(--red);
              }
              &_field {
                border-color: var(--red);
                &.select_field {
                  .react-select {
                    &__control {
                      border-color: var(--red);
                    }
                  }
                }
              }
            }
          }
        }

        &.radio_field {
          .form_grider_wrap_label {
            margin-bottom: 10px;
          }
          .radio_container {
            input[type='radio'] + label {
              display: inline-block;
              cursor: pointer;
              position: relative;
              padding-left: 30px;
              margin-right: 30px; //15px
              font-size: $font14;
              color: var(--themeTextTertiary);
              line-height: 1.6;
              @include fontBase(var(--fontMedium));

              &:before {
                content: '';
                display: block;
                @include size(20px);
                margin-right: 15px;
                position: absolute;
                top: 1px;
                left: 0;
                border: 2px solid var(--grey8);
                background-color: var(--white);
                border-radius: 50%;
              }
            }

            input[type='radio'] {
              display: none !important;
              *display: inline;

              &:checked + label {
                &:before {
                  border-color: var(--themePrimary);
                }
                &:after {
                  content: '';
                  display: block;
                  position: absolute;
                  top: 6px;
                  left: 5px;
                  @include size(10px);
                  border-radius: 50%;
                  background: var(--themePrimary);
                }
              }
            }
          }
        }

        &.checkbox_field {
          .form_grider_wrap_label {
            margin-bottom: 10px;
          }
          .checkbox_container {
            @include flexbox;
            input[type='checkbox'] + label {
              display: inline-block;
              cursor: pointer;
              position: relative;
              padding-left: 30px;
              margin-right: 15px;
              font-size: $font14;
              color: var(--themeTextTertiary);
              line-height: 1.6;
              @include fontBase(var(--fontMedium));
              min-height: 20px;

              &:before {
                content: '';
                display: block;
                @include size(20px);
                margin-right: 15px;
                position: absolute;
                top: 0px;
                left: 0;
                border: 2px solid var(--grey8);
                background-color: var(--white);
                @include border-radius(5px);
              }
            }

            input[type='checkbox'] {
              display: none !important;
              *display: inline;

              &:checked + label {
                &:before {
                  border-color: var(--themePrimary);
                }

                &:after {
                  content: 'âœ”';
                  font-size: $font14;
                  line-height: 20px;
                  color: var(--themePrimary);
                  display: block;
                  position: absolute;
                  top: 0;
                  left: 4px;
                  width: 20px;
                  height: 20px;
                  border-radius: 3px;
                }
              }
            }
          }
        }
      }
    }
  }
}

.react-select__menu,
.react-select__menu-list {
  background-color: var(--whiteBlack);
}

.react-select__option:hover {
  color: var(--black);
}

.react-select__option:focus {
  color: var(--black);
}

.react-select__option:active {
  color: var(--black);
}

.react-select__option--is-focused{
  color: var(--black) !important;
}